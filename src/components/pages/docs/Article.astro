---
import IconArrowUp from "@icons/arrow-up.svg";

import JSONViewer from "./JSONViewer.astro";

interface Props {
  data: {
    title: string;
    icon: string;
    subtitle: string;
    method: "POST" | "GET" | "PUT";
    url: string;
    headers: { key: string; type: string; desc: string; isRequired: boolean }[];
    req: any;
    success: any;
    failure: any[];
  };
  index: number;
}

const { data, index } = Astro.props;
const { title, subtitle, method, url, headers, req, success, failure } = data;
---

<article id={`art_${index}`} class="mb-8">
  <div id={`head_${index}`} class="flex items-center cursor-pointer">
    <div
      id={`icon_${index}`}
      class="flex justify-center items-center transition-transform duration-300"
    >
      <IconArrowUp slot="start" width={40} height={40} />
    </div>

    <h3 class="text-3xl font-bold">{title}</h3>
  </div>

  <div
    id={`body_${index}`}
    class="grid grid-rows-[0fr] overflow-hidden"
  >
    <div class="min-h-0 grid gap-6">
      <h4 class="text-xl text-white-700">{subtitle}</h4>

      <span class="flex items-center gap-2">
        <span
          class="py-2 px-[1rem_1.5rem] text-white-50 font-bold bg-main-950 rounded-r-full"
          >{method}</span
        >
        <span class="text-main-950">{url}</span>
      </span>

      <div class="relative overflow-x-auto bg-main-950 rounded-xl">
        <table class="w-full text-sm text-left">
          <caption class="p-3 text-xl text-left text-white-50 bg-main-950"
            >Headers
          </caption>

          <thead class="text-white-100 bg-main-900">
            <tr>
              <th scope="col" class="px-3 py-2"> Campo </th>
              <th scope="col" class="px-3 py-2"> Tipo </th>
              <th scope="col" class="px-3 py-2"> Descripcion </th>
            </tr>
          </thead>
          <tbody>
            {
              headers.map((h) => (
                <tr class="bg-main-900 text-white-200 border-t-1 border-main-800">
                  <td class="px-3 py-2 relative">
                    {h.key}
                    {h.isRequired && (
                      <span class="absolute right-0 bg-red-300 text-red-800 text-xs font-bold me-2 px-2.5 py-0.5 rounded-sm">
                        Requerido
                      </span>
                    )}
                  </td>
                  <td class="px-3 py-2"> {h.type} </td>
                  <td class="px-3 py-2"> {h.desc} </td>
                </tr>
              ))
            }
          </tbody>
        </table>
      </div>

      <JSONViewer label="Request de ejemplo" jsonData={req} />
      <JSONViewer label="Success response" jsonData={success} />
      <JSONViewer label="Failure response" jsonData={failure[0]} />
    </div>
  </div>
</article>
